name: Docker Build, Push & Deploy

on:
  push:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    environment: docker
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./Backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-backend:latest

  frontend:
    runs-on: ubuntu-latest
    environment: docker
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./Frontend/my-app
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    environment: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Install Docker on EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
            # Update system and install Docker
            sudo apt-get update
            sudo apt-get install -y docker.io
            
            # Start and enable Docker service
            sudo systemctl start docker
            sudo systemctl enable docker
            
            # Add ubuntu user to docker group
            sudo usermod -aG docker ubuntu
            
            # Install Docker Compose
            sudo apt-get install -y docker-compose-plugin
            
            # Create app directory
            mkdir -p ~/paytm
            cd ~/paytm
            
            # Create docker-compose.yml if it doesn't exist
            if [ ! -f docker-compose.yml ]; then
              cat > docker-compose.yml << 'EOF'
            version: '3.8'
            services:
              backend:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-backend:latest
                ports:
                  - '3000:3000'
                environment:
                  - NODE_ENV=production
                
              frontend:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-frontend:latest
                ports:
                  - '80:80'
                depends_on:
                  - backend
            EOF
            fi
            
            # Login to Docker Hub
            echo '${{ secrets.DOCKER_HUB_PASSWORD }}' | sudo docker login -u '${{ secrets.DOCKER_HUB_USERNAME }}' --password-stdin
            
            # Pull latest images
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-backend:latest
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-frontend:latest
            
            # Stop and remove existing containers
            sudo docker compose down || true
            
            # Start new containers
            sudo docker compose up -d
          "