name: Docker Build, Push & Deploy

on:
  push:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./Backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-backend:latest

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./Frontend/my-app
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/paytm-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Copy .env file to EC2 (if exists)
        run: |
          if [ -f ./Backend/.env ]; then
            scp -o StrictHostKeyChecking=no ./Backend/.env ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/paytm/.env
          fi

      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            set -e
            # Docker setup
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose-plugin
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu || true
            mkdir -p ~/paytm
            # Write docker-compose.yml
            cat << 'EOC' > ~/paytm/docker-compose.yml
version: "3.8"
services:
  backend:
    image: $DOCKER_USERNAME/paytm-backend:latest
    ports:
      - "3001:3001"
    env_file:
      - .env
    container_name: paytm-backend

  frontend:
    image: $DOCKER_USERNAME/paytm-frontend:latest
    ports:
      - "8081:3000"
    depends_on:
      - backend
    container_name: paytm-frontend
EOC

            echo "$DOCKER_PASSWORD" | sudo docker login -u "$DOCKER_USERNAME" --password-stdin

            cd ~/paytm
            sudo docker pull $DOCKER_USERNAME/paytm-backend:latest
            sudo docker pull $DOCKER_USERNAME/paytm-frontend:latest
            sudo docker compose down || true
            sudo docker compose up -d
EOF
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}